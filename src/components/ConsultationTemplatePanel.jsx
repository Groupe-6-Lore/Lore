import React, { useState } from 'react';
import TemplateTab from './TemplateTab';
import { ArrowLeft, Copy, Edit, ChevronRight } from 'lucide-react';

const ConsultationTemplatePanel = ({ 
  template, 
  onBack, 
  onEdit, 
  onCopyLink,
  tabs = []
}) => {
  const [activeTab, setActiveTab] = useState('templates');
  const [isOpen, setIsOpen] = useState(true);

  const handleToggle = () => {
    setIsOpen(!isOpen);
  };

  const handleTabChange = (tabId) => {
    setActiveTab(tabId);
    // Toujours revenir √† la page templates quand on change d'onglet
    onBack();
  };

  // Donn√©es de d√©monstration bas√©es sur l'image
  const templateData = {
    id: template?.id || 'bataille-arcanix',
    name: template?.name || 'Bataille d\'Arcanix',
    category: template?.category || 'quete-principale',
    subcategory: template?.subcategory || 'cite-arcanix',
    location: 'Arcanix',
    sponsor: 'Nom du personnage',
    tags: [
      { name: 'Qu√™te Principale', color: 'bg-primary-blue' },
      { name: 'Ville', color: 'bg-primary-blue' },
      { name: 'Magie', color: 'bg-primary-blue' },
      { name: 'Alli√©s', color: 'bg-primary-blue' }
    ],
    image: '/images/templates/arcanix-castle.jpg', // Image du ch√¢teau
    description: `Arcanix, la cit√© des mages, se dresse majestueusement sur les derni√®res collines embrum√©es de l'Est. Accroch√©e aux falaises comme un joyau pr√©cieux, elle brille de mille arcanes scintillantes qui dansent dans l'air du cr√©puscule.

Ses tours √©lanc√©es, serties de runes lumineuses, percent les nuages bas et projettent des ombres myst√©rieuses sur les ponts de pierre suspendus qui relient les diff√©rents quartiers de la cit√©. Chaque pierre de ses murailles raconte une histoire mill√©naire, chaque fen√™tre √©clair√©e r√©v√®le un secret magique.

Au c≈ìur de la cit√©, l'Acad√©mie des Mages domine l'horizon de sa silhouette imposante. Ses biblioth√®ques infinies renferment les connaissances les plus anciennes, tandis que ses laboratoires r√©sonnent encore des exp√©riences des plus grands sorciers de l'histoire.

Les rues pav√©es d'Arcanix bruissent d'activit√© magique. Les marchands vendent des ingr√©dients rares, les apprentis s'entra√Ænent dans les cours int√©rieures, et les ma√Ætres mages d√©battent de th√©ories complexes dans les tavernes enfum√©es.

C'est ici que se jouera le destin de nombreux aventuriers, dans cette cit√© o√π la magie coule dans les veines m√™mes de la pierre.`
  };


  const handleCopyLink = () => {
    // Utiliser la m√™me fonction que dans la page templates
    onCopyLink();
  };

  const consultationContent = (
    <div className="h-full flex flex-col pt-6 pr-6">
      {/* Breadcrumb */}
      <div className="flex items-center gap-2 text-sm text-[#552E1A]/70 mb-4">
        <button 
          onClick={onBack}
          className="hover:text-[#552E1A] transition-colors"
        >
          Templates
        </button>
        <ChevronRight size={14} />
        <span className="text-[#552E1A]/70">Qu√™te principale</span>
        <ChevronRight size={14} />
        <span className="text-[#552E1A] font-medium">{templateData.name}</span>
      </div>

      {/* Titre avec bouton retour */}
      <div className="flex items-center gap-3 mb-6">
        <button
          onClick={onBack}
          className="w-8 h-8 bg-golden rounded flex items-center justify-center hover:bg-golden/80 transition-colors"
        >
          <ArrowLeft size={16} className="text-[#552E1A]" />
        </button>
        <h1 className="text-black text-2xl font-bold eagle-lake-font">{templateData.name}</h1>
      </div>

      {/* Contenu principal */}
      <div className="flex-1 overflow-y-auto pb-12 max-h-[calc(100vh-300px)]">
        <div className="max-w-5xl">
          {/* Section m√©tadonn√©es - 2 colonnes */}
          <div className="grid grid-cols-2 gap-8 mb-8">
            {/* Colonne gauche - M√©tadonn√©es */}
            <div className="space-y-6">
              {/* Lieu */}
              <div>
                <label className="block text-[#552E1A] font-bold mb-1 eagle-lake-font">
                  Lieu
                </label>
                <span className="text-[#552E1A]">{templateData.location}</span>
              </div>

              {/* Commanditaire */}
              <div>
                <label className="block text-[#552E1A] font-bold mb-1 eagle-lake-font">
                  Commanditaire
                </label>
                <span className="text-[#552E1A]">{templateData.sponsor}</span>
              </div>

              {/* Tags */}
              <div>
                <label className="block text-[#552E1A] font-bold mb-3 eagle-lake-font">
                  Tags
                </label>
                <div className="flex flex-wrap gap-2">
                  {templateData.tags.map((tag, index) => (
                    <span
                      key={index}
                      className={`${tag.color} text-white px-3 py-1 rounded-full text-sm font-medium`}
                    >
                      {tag.name}
                    </span>
                  ))}
                </div>
              </div>
            </div>

            {/* Colonne droite - Image */}
            <div>
              <div className="w-full h-64 bg-[#F5F1E8] border-2 border-dashed border-[#552E1A]/30 rounded-lg flex items-center justify-center overflow-hidden">
                <img
                  src={templateData.image}
                  alt={templateData.name}
                  className="w-full h-full object-cover rounded-lg"
                  onError={(e) => {
                    // Fallback si l'image ne charge pas
                    e.target.style.display = 'none';
                    e.target.nextSibling.style.display = 'flex';
                  }}
                />
                <div 
                  className="hidden w-full h-full items-center justify-center text-[#552E1A]/60"
                  style={{ display: 'none' }}
                >
                  <div className="text-center">
                    <div className="text-lg mb-2">üè∞</div>
                    <div className="text-sm">Image du ch√¢teau d'Arcanix</div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Section description */}
          <div className="mb-8">
            <label className="block text-[#552E1A] font-bold mb-3 eagle-lake-font">
              Description
            </label>
            <div className="bg-[#F5F1E8] p-4 rounded-lg border border-[#552E1A]/20 max-h-64 overflow-y-auto">
              <div className="text-[#552E1A] leading-relaxed whitespace-pre-line">
                {templateData.description}
              </div>
            </div>
          </div>

          {/* Boutons d'action */}
          <div className="flex justify-end gap-4">
            <button
              onClick={() => onEdit(templateData)}
              className="bg-[#F5F1E8] text-[#552E1A] px-6 py-3 rounded-lg border border-[#552E1A]/20 hover:bg-[#E8E0D0] transition-colors font-medium flex items-center gap-2"
            >
              <Edit size={16} />
              Modifier
            </button>
            <button
              onClick={handleCopyLink}
              className="bg-golden text-[#552E1A] px-6 py-3 rounded-lg font-semibold hover:bg-golden/80 transition-colors flex items-center gap-2"
            >
              <Copy size={16} />
              Copier le lien
            </button>
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <TemplateTab
      isOpen={isOpen}
      onToggle={handleToggle}
      activeTab={activeTab}
      onTabChange={handleTabChange}
      tabs={tabs}
      backgroundImage="/images/templates/templates-background.svg"
      closedImage="/images/templates/template-tab-closed.svg"
      openImage="/images/templates/template-tab-open.svg"
    >
      {consultationContent}
    </TemplateTab>
  );
};

export default ConsultationTemplatePanel;
